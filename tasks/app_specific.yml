---
###############################################################################
################################# INSTALL #####################################
###############################################################################

- stat:
    path: "{{ container_prefix }}"
  register: installed_ok
  tags:
    - container_systemd

- name: create the dnsmasq paths
  file:
    path: "{{ pihole_system_dnsmasq }}"
    state: directory
    mode: 0755
    owner: "{{container_user}}"
    group: "{{container_group}}"
- name: create the pihole paths
  file:
    path: "{{ pihole_system_etc_pihole }}"
    state: directory
    mode: 0755
    owner: "{{container_user}}"
    group: "{{container_group}}"





#--name=pihole  --env-file=envfile -v ./etc-pihole/:/etc/pihole/:z -v ./etc-dnsmasq.d/:/etc/dnsmasq.d/:z --network=host pihole/pihole:latest

###############################################################################
################################ CONFIGURE ####################################
###############################################################################

- block:

  - name: Add default ad lists for gravity DB
    template:
      src: adlists.list
      dest: "{{pihole_system_etc_pihole}}/adlists.list"
      mode: 0600
      owner: "{{container_user}}"
      group: "{{container_group}}"

  - name: Add default custom dns lists
    template:
      src: adlists.list
      dest: "{{pihole_system_etc_pihole}}/custom.list.j2"
      mode: 0600
      owner: "{{container_user}}"
      group: "{{container_group}}"


  - name: First run of image (no idea if I can )
#    shell: "{{podman_path}} run -d --replace=true --name=pihole  --cap-add CAP_NET_BIND_SERVICE  --ip {{ ansible_default_ipv4.address }} -p 53:53/tcp -p 53:53/udp -p 67:67/udp -p 80:80/tcp -p 443:443/tcp --restart=unless-stopped --env-file={{container_env_file}} -v {{container_conf_dir}}/:/etc/pihole/:z -v {{container_conf_dir}}/:/etc/dnsmasq.d/:z  pihole/pihole:latest"
    shell: "{{podman_path}} run -d --replace=true --hostname `hostname`-pihole --name=pihole  -p 53:53/tcp -p 53:53/udp -p 67:67/udp -p 80:80/tcp -p 443:443/tcp --restart=unless-stopped --env-file={{container_env_file}} -v {{container_conf_dir}}/pihole:/etc/pihole/:z -v {{container_conf_dir}}/dnsmasq.d:/etc/dnsmasq.d/:z  pihole/pihole:latest"
    args:
      executable: /bin/bash
    register: pull_ok


  become: yes
  become_user: "{{container_user}}"
  tags: pihole_systemd
